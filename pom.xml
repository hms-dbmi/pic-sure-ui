<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.harvard.hms.dbmi.avillach.picsure</groupId>
	<artifactId>pic-sure-ui</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>PIC-SURE API based feasibility query tool.</name>
	<dependencies>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>underscorejs</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.7-1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>backbonejs</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>handlebars</artifactId>
			<version>4.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap-modal</artifactId>
			<version>2.2.5</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>requirejs</artifactId>
			<version>2.3.5</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>requirejs-text</artifactId>
			<version>2.0.15</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>devbridge-autocomplete</artifactId>
			<version>1.4.7</version>
		</dependency>

		<dependency>
			<groupId>org.mitre.dsmiley.httpproxy</groupId>
			<artifactId>smiley-http-proxy-servlet</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap-treeview</artifactId>
			<version>1.2.0</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>pic-sure-ui</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.0</version>
					<executions>
						<execution>
							<id>default-cli</id>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<port>13000</port>
								<path>/</path>
								<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>2.2</version>
					<executions>
						<execution>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<specRunnerTemplate>REQUIRE_JS</specRunnerTemplate>
						<customRunnerConfiguration>src/test/javascript/require_config.txt</customRunnerConfiguration>
						<preloadSources>
							<source>webjars/requirejs/2.3.5/require.min.js</source>
						</preloadSources>
						<srcDirectoryName>/js</srcDirectoryName>
						<jsSrcDir>src/main/webapp</jsSrcDir>
					</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>reserve-network-port</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>process-test-resources</phase>
						<configuration>
							<portNames>
								<portName>test.server.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>start-tomcat</id>
						<goals>
							<goal>run-war</goal>
						</goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<port>${test.server.port}</port>
							<path>/</path>
							<fork>true</fork>
							<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
						</configuration>
					</execution>
					<execution>
						<id>stop-tomcat</id>
						<goals>
							<goal>shutdown</goal>
						</goals>
						<phase>post-integration-test</phase>
						<configuration>
							<path>/</path>
						</configuration>
					</execution>
					<execution>
						<!-- NOTE : The standalone.jar is just so Paul can demo at this point. 
							Work should be done to harden it if we decide to use this as a deployment 
							method for production. -->
						<id>tomcat-run</id>
						<goals>
							<goal>exec-war</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<path>/</path>
							<enableNaming>false</enableNaming>
							<finalName>standalone.jar</finalName>
							<charset>utf-8</charset>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.20</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<service.url>http://localhost:${test.server.port}/</service.url>
							</systemPropertyVariables>
						</configuration>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-war-for-docker</id>
						<phase>install</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<type>${project.packaging}</type>
									<destFileName>pic-sure-ui.war</destFileName>
								</artifactItem>
							</artifactItems>
							<outputDirectory>tomcat/build</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>tomcat/build/</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
